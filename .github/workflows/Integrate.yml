name: Continuous Integration

on:
  pull_request:
    branches: 
      - master
      - develop
      - staging
  push:
    branches:
      - test/pipeline_reorder

jobs:
  Stylelint-Eslint-Prettier:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 12
      - name: Install Node.js dependencies
        run: npm install

      - name: Run linters
        run: npm run lint &&
          npm run stylelint

      - name: Run prettier
        run: npm run prettier

      - name: Create file 'LINT.TXT' and write 'true' into it
        run: echo 'true' > LINT.TXT

      - name: Upload file 'LINT.TXT' as an artifact
        uses: actions/upload-artifact@v1
        with:
          name: pass_file
          path: LINT.TXT


  Code-Quality:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@master
      with:
        node-version: 12
    - name: Install Node.js dependencies
      run: npm install
    
    - name: Check for code duplicate
      run: npm run jscpd

    - name: Static Type Checker
      run: npm run flow

    - name: Running Code Inspector
      id: code-inspector
      uses: codeinspectorio/github-action@master
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        code_inspector_access_key: ${{ secrets.CODE_INSPECTOR_ACCESS_KEY }}
        code_inspector_secret_key: ${{ secrets.CODE_INSPECTOR_SECRET_KEY }}
        min_quality_grade: 'WARNING'
        min_quality_score: '50'
        max_defects_rate: '0.30'
        max_complex_functions_rate: '0.30'
        max_long_functions_rate: '0.30'
        project_name: ''
        max_timeout_sec: '600'

  Code-Coverage:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 12
      - name: Install Node.js dependencies
        run: npm install
    
      - name: Running jest coverage
        if: steps.set_output.outputs.RUN_JOB_THREE == 'true'
        run: npm run test:coverage

  Unit-Test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 12
      - name: Install Node.js dependencies
        run: npm install
        
      - name: Run unit-test
        run: npm test tests/backendTests tests/frontendTests

  End-to-End-Test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 12
      - name: Install Node.js dependencies
        run: npm install

      - name: Run end-to-end-test
        run: npm test tests/end2endTests
