{"version":3,"sources":["components/CreateJoinTeam.js","components/NavBar.js","components/SideNav.js","components/Teams.js","components/Home.js","components/Timeline.js","App.js","serviceWorker.js","index.js"],"names":["CreateJoinTeam","props","componentDidMount","M","AutoInit","setupButtonListener","getEmail","setEmailCallback","chrome","runtime","sendMessage","for","message","response","email","setHeaderEmail","document","querySelector","textContent","substr","indexOf","addEventListener","onCreateTeam","onJoinTeam","teamName","value","msg","that","console","log","storage","local","set","prevTeam","history","push","toast","html","displayLength","teamCode","toUpperCase","length","test","state","className","href","id","type","maxlength","Component","withRouter","NavBar","SideNav","to","Teams","getTeam","setState","teams","onClickTeam","team","this","map","onClick","bind","data-position","data-tooltip","Home","a","task","Promise","resolve","reject","get","data","teamMembers","Object","keys","members","teamMember","Timeline","timeline","onMessage","addListener","handleMessage","createLeftCard","innerHTML","time","update","newElement","style","color","leftRightBranch","unshift","createRightCard","url","flip","tab","Date","toLocaleTimeString","black_listed","animals","urls","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.987d3150.chunk.js","sourcesContent":["/*global chrome*/\nimport React, { Component } from \"react\";\nimport M from \"materialize-css\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./materialize.min.css\";\nimport \"./CreateJoinTeam.css\";\n\nclass CreateJoinTeam extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount = () => {\n    M.AutoInit();\n    // this.getEmail(this.setHeaderEmail);\n    this.setupButtonListener();\n  };\n  /**\n   * Get the email from background page and update the html\n   * @author : Karl Wang\n   * @param {function} setEmailCallback Send the email to the html\n   */\n  getEmail = (setEmailCallback) => {\n    // the message to be sent\n    let msg = { for: \"background\", message: \"get email\" };\n    chrome.runtime.sendMessage(msg, function (response) {\n      // set the email on html\n      setEmailCallback(response.email);\n    });\n  };\n  /**\n   * Get the prefix of the email and show it on html\n   * @author : Karl Wang\n   * @param {string} email The email to be shown on html\n   */\n  setHeaderEmail = (email) => {\n    let insertEmail = document.querySelector(\"#insertEmail\");\n    insertEmail.textContent = email.substr(0, email.indexOf(\"@\"));\n  };\n\n  // function setTeamCode(teamCode) {\n  //   let code = document.querySelector(\"#autogeneratedTeamCode\");\n  //   code.value = teamCode;\n  // }\n  // function getTeamCode() {\n  //   return new Promise(function (resolve, reject) {\n  //     let msg = { for: \"background\", message: \"get team code\" };\n  //     chrome.runtime.sendMessage(msg, function (response) {\n  //       resolve(response.teamCode);\n  //     });\n  //   });\n  // }\n  /**\n   * Setup the listener for create team and join team button\n   * @author : Karl Wang\n   */\n  setupButtonListener = () => {\n    let createButton = document.querySelector(\"#createButton\");\n    createButton.addEventListener(\"click\", this.onCreateTeam);\n    // createButton.addEventListener(\"click\", function(){\n    //     console.log(\"clicked\")\n    // });\n    let joinButton = document.querySelector(\"#joinButton\");\n    joinButton.addEventListener(\"click\", this.onJoinTeam);\n  };\n\n  /**\n   * Send the team name to background, which handles create team on database\n   * Do preliminary checking if the team name is legit\n   * @author : Karl Wang\n   */\n  onCreateTeam = () => {\n    let teamName = document.querySelector(\"#teamName\").value;\n    //   team name is empty\n    if (teamName === \"\") {\n      M.toast({ html: \"Team name cannot be empty!\", displayLength: 2000 });\n      return;\n    }\n    let msg = {\n      for: \"background\",\n      message: \"create team\",\n      teamName: teamName,\n    };\n    let that = this;\n    //   send to background page\n    chrome.runtime.sendMessage(msg, (response) => {\n      console.log(response);\n      chrome.storage.local.set({ prevTeam: response });\n      that.props.history.push(\"/\");\n    });\n  };\n  /**\n   * Send the request along with the team code to background page\n   * Do preliminary checking to see if the team code is valid\n   * @author : Karl Wang\n   */\n  onJoinTeam = () => {\n    let teamCode = document.querySelector(\"#teamCode\").value;\n    teamCode = teamCode.toUpperCase();\n    if (teamCode.length != 5) {\n      M.toast({\n        html: \"Team code should be 5 characters!\",\n        displayLength: 2000,\n      });\n      return;\n    }\n    //   check if it only contains alphabets and numbers\n    const regex = /^[A-Z0-9]+$/i;\n    if (!regex.test(teamCode)) {\n      M.toast({\n        html: \"Team code should only contains alphabets and numbers\",\n        displayLength: 2000,\n      });\n      return;\n    }\n\n    let msg = {\n      for: \"background\",\n      message: \"join team\",\n      teamCode: teamCode,\n    };\n    chrome.runtime.sendMessage(msg, (response) => {\n      if (response === \"team code not found\") {\n        M.toast({\n          html: \"Team code does not exist!\",\n          displayLength: 2000,\n        });\n        return;\n      } else if (response === \"success\") {\n        chrome.storage.local.set(\n          {\n            prevTeam: teamCode,\n          },\n          () => {\n            this.props.history.push(\"/\");\n          }\n        );\n        return;\n      } else if (response === \"already joined the group\") {\n        M.toast({\n          html: \"You have already joined this group\",\n          displayLength: 2000,\n        });\n        return;\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* <div className=\"center-align\">\n          <h4 className=\"blue-grey-text text-lighten-1\">\n            Hello, <span id=\"insertEmail\"></span>\n          </h4>\n        </div> */}\n\n        <div className=\"row\">\n          <div className=\"col s12\">\n            {/* <div className=\"divider col s12\"></div> */}\n            <ul className=\"tabs\">\n              <li className=\"tab col s6\">\n                {/* <!-- First Tab --> */}\n                <a className=\"active\" href=\"#createTeam\">\n                  Create Team\n                </a>\n              </li>\n              <li className=\"tab col s6\">\n                {/* <!-- Second Tab --> */}\n                <a className=\"active\" href=\"#joinTeam\">\n                  Join Team\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div id=\"createTeam\" className=\"col s12\">\n            {/* <!-- Target of first tab -->\n        <!-- Row for Team Name --> */}\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input id=\"teamName\" type=\"text\" className=\"validate\" />\n                <label for=\"teamName\">Team Name</label>\n              </div>\n            </div>\n            {/* <!-- Row for CREATE --> */}\n            <div className=\"row center-align\">\n              <div className=\"col s12\">\n                <button\n                  id=\"createButton\"\n                  className=\"waves-effect waves-light btn-large red accent-1\"\n                >\n                  Create\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* <!-- Target for the second tab --> */}\n          <div id=\"joinTeam\" className=\"col s12\">\n            {/* <!-- second tab input team code --> */}\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input\n                  maxlength=\"5\"\n                  id=\"teamCode\"\n                  type=\"text\"\n                  className=\"validate\"\n                />\n                <label for=\"teamCode\">Team Code</label>\n              </div>\n            </div>\n\n            {/* <!-- Row for JOIN --> */}\n            <div className=\"row center-align\">\n              <div className=\"col s12\">\n                <button\n                  id=\"joinButton\"\n                  className=\"waves-effect waves-light btn-large red accent-1\"\n                >\n                  Join\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(CreateJoinTeam);\n","import React, { Component } from \"react\";\nimport M from \"materialize-css\";\nimport \"./materialize.min.css\";\nimport \"./NavBar.css\";\n\n\nexport default class NavBar extends Component {\n  componentDidMount() {\n    M.AutoInit();\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <!-- Navbar goes here --> */}\n        <nav>\n          <div className=\"nav-wrapper\">\n            <a href=\"#\" className=\"brand-logo\">\n              Logo\n            </a>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n              <li>\n                <a href=\"sass.html\">Sass</a>\n              </li>\n              <li>\n                <a href=\"badges.html\">Components</a>\n              </li>\n              <li>\n                <a href=\"collapsible.html\">JavaScript</a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SideNav.css\";\n\nexport default class SideNav extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <Link\n          className=\"grey darken-3 waves-effect waves-light card-panel center-align\"\n          to=\"/\"\n        >\n          <span>Home</span>\n        </Link>\n        <Link\n          className=\"grey darken-3 waves-effect waves-light card-panel center-align\"\n          to=\"/teams\"\n        >\n          <span>Teams</span>\n        </Link>\n        <Link\n          className=\"grey darken-3 waves-effect waves-light card-panel center-align\"\n          to=\"/timeline\"\n        >\n          <span>Timeline</span>\n        </Link>\n      </div>\n    );\n  }\n}\n","/* global chrome */\nimport React, { Component } from \"react\";\nimport \"./Teams.css\";\nimport M from \"materialize-css\";\nimport CreateJoinTeam from \"./CreateJoinTeam\";\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\n\nclass Teams extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teams: [],\n    };\n  }\n  componentDidMount = () => {\n    M.AutoInit();\n    this.getTeam();\n  };\n  getTeam = () => {\n    let msg = { for: \"background\", message: \"get teams\" };\n    chrome.runtime.sendMessage(msg, (response) => {\n      this.setState({\n        teams: response,\n      });\n    });\n  };\n  onClickTeam = (team) => {\n    chrome.storage.local.set({ prevTeam: team.teamCode });\n    this.props.history.push(\"/\" + team.teamCode);\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.state.teams.map((team) => {\n          return (\n            <div className=\"col s3\">\n              <a\n                onClick={this.onClickTeam.bind(this, team)}\n                teamCode={team.teamCode}\n                className=\"rounded-btn waves-effect waves-light btn\"\n              >\n                <div className=\"inside-btn\">\n                  <text className=\"flexbox-centering\">{team.teamName}</text>\n                </div>\n              </a>\n            </div>\n          );\n        })}\n        <div className=\"col s3\">\n          <a\n            href=\"#modal-createjoin\"\n            className=\"rounded-btn waves-effect waves-light btn tooltipped modal-trigger\"\n            data-position=\"bottom\"\n            data-tooltip=\"Create or join a new team\"\n          >\n            <div className=\"inside-btn\">\n              <text className=\"flexbox-centering\">\n                <i className=\"material-icons\">add</i>\n              </text>\n            </div>\n          </a>\n          <div id=\"modal-createjoin\" className=\"modal\">\n            <div className=\"modal-content\">\n              <CreateJoinTeam></CreateJoinTeam>\n            </div>\n            <div className=\"modal-footer\">\n              <a\n                href=\"#!\"\n                className=\"modal-close waves-effect waves-green btn-flat\"\n              >\n                Close\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Teams);\n","/*global chrome*/\nimport React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamCode: \"\",\n      teamName: \"\",\n      teamMembers: [],\n    };\n  }\n  componentDidMount = async () => {\n    let task = new Promise((resolve, reject) => {\n      chrome.storage.local.get(\"prevTeam\", function (data) {\n        resolve(data);\n      });\n    });\n    let data = await task;\n    if (!\"prevTeam\" in data) {\n      return;\n    }\n    console.log(data);\n    let msg = {\n      for: \"background\",\n      message: \"get team info\",\n      teamCode: data.prevTeam,\n    };\n    chrome.runtime.sendMessage(msg, (response) => {\n      this.setState({\n        teamCode: data.prevTeam,\n        teamName: response.teamName,\n        teamMembers: Object.keys(response.members),\n      });\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"divider\"></div>\n        <div className=\"section\">\n          <h5>{this.state.teamName}</h5>\n          <p>Team Code: {this.state.teamCode}</p>\n        </div>\n        <div className=\"divider\"></div>\n        <div className=\"section\">\n          <h5>Team Members</h5>\n          {/* {this.state.teamMembers} */}\n          {this.state.teamMembers.map((teamMember) => {\n            return <p>{teamMember}</p>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","/*global chrome*/\nimport React, { Component } from \"react\";\nimport \"./Timeline.css\";\n\nexport default class Timeline extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      black_listed: [\n        \"www.youtube.com\",\n        \"www.facebook.com\",\n        \"twitter.com\",\n        \"myspace.com\",\n      ],\n      animals: [\n        \"alligator\",\n        \"anteater\",\n        \"armadillo\",\n        \"aurochs\",\n        \"axolotl\",\n        \"badger\",\n        \"bat\",\n        \"beaver\",\n        \"buffalo\",\n        \"camel\",\n        \"capybara\",\n      ],\n      leftRightBranch: [],\n      urls: [],\n    };\n\n    this.createLeftCard = this.createLeftCard.bind(this);\n  }\n  componentDidMount = () => {\n    this.timeline();\n    chrome.runtime.onMessage.addListener(this.handleMessage);\n  };\n\n  createLeftCard = (innerHTML, time, update) => {\n    let newElement = (\n      <div className=\"row\">\n        <div className=\"col s6\">\n          <div className=\"card blue-grey lighten-5\">\n            <div className=\"card-content white-text\">\n              <span style={{ color: \"black\" }} className=\"card-title\">\n                {innerHTML}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"col s6\">\n          <div>\n            <h4 style={{ color: \"#6886c5\" }}>{time}</h4>\n          </div>\n        </div>\n      </div>\n    );\n    // Differentiate if first time opening timeline\n    update\n      ? this.state.leftRightBranch.unshift(newElement) // queue\n      : this.state.leftRightBranch.push(newElement); // stack\n    this.setState({\n      leftRightBranch: this.state.leftRightBranch,\n    });\n  };\n\n  createRightCard = (innerHTML, time, update) => {\n    // date.\n    let newElement = (\n      <div className=\"row\">\n        <div className=\"col s6 \">\n          <h4 style={{ color: \"#fa9191\" }}>{time}</h4>\n        </div>\n        <div className=\"col s6\">\n          <div className=\"card blue-grey lighten-5\">\n            <div className=\"card-content white-text\">\n              <span style={{ color: \"black\" }} className=\"card-title\">\n                {innerHTML}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    // Differentiate if first time opening timeline\n    update\n      ? this.state.leftRightBranch.unshift(newElement) // queue\n      : this.state.leftRightBranch.push(newElement); // stack\n    this.setState({\n      leftRightBranch: this.state.leftRightBranch,\n    });\n  };\n\n  handleMessage = (msg) => {\n    // new element for timeline\n    if (msg.for === \"popup\") {\n      if (msg.message === \"timeline\") {\n        let url = msg.url;\n        let time = msg.time;\n        msg.flip\n          ? this.createRightCard(url, time, 1)\n          : this.createLeftCard(url, time, 1);\n      }\n    }\n    console.log(msg);\n    return true;\n  };\n\n  timeline = async () => {\n    //   team name is empty\n    let msg = {\n      for: \"background\",\n      message: \"get timeline\",\n    };\n\n    let task = new Promise((resolve, reject) => {\n      chrome.runtime.sendMessage(msg, function (response) {\n        resolve(response);\n      });\n    });\n    let data = await task;\n    data.map((tab) => {\n      let url = tab.url;\n      let time = new Date(tab.time).toLocaleTimeString();\n      let flip = tab.flip;\n      flip\n        ? this.createLeftCard(url, time, 0)\n        : this.createRightCard(url, time, 0);\n    });\n  };\n\n  render() {\n    return <div id=\"timeline\">{this.state.leftRightBranch}</div>;\n  }\n}\n","/*global chrome*/\nimport React, { Component } from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport CreateJoinTeam from \"./components/CreateJoinTeam\";\nimport NavBar from \"./components/NavBar\";\nimport \"./components/materialize.min.css\";\nimport SideNav from \"./components/SideNav\";\nimport \"./App.css\";\nimport Teams from \"./components/Teams\";\nimport Home from \"./components/Home\";\nimport Timeline from \"./components/Timeline\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <NavBar></NavBar>\n          <div className=\"row\">\n            <div className=\"col s2\" id=\"side\">\n              <SideNav></SideNav>\n            </div>\n            <div className=\"col s10\" id=\"component\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/createjoin\"\n                  component={CreateJoinTeam}\n                ></Route>\n                <Route exact path=\"/teams\" component={Teams}></Route>\n                <Route exact path=\"/timeline\" component={Timeline}></Route>\n\n                <Route path=\"/\" component={Home}></Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}